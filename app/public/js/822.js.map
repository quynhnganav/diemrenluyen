{"version":3,"file":"js/822.js","mappings":"4HAKMA,GAFMC,SAASC,KAAKC,cAAc,2BAE1BC,IAAAA,OAAqB,CAC/BC,QAAS,IACTC,aAAc,W,2xDCDlB,IAAMC,GAAYC,EAAAA,EAAAA,aAAW,WAE1BC,GAAQ,IADPC,EACO,EADPA,SAGA,KAA8BC,EAAAA,EAAAA,WAAS,GAAvC,GAAOC,EAAP,KAAgBC,EAAhB,KACA,KAA8BF,EAAAA,EAAAA,WAAS,GAAvC,GAAOG,EAAP,KAAgBC,EAAhB,KACA,KAAwBJ,EAAAA,EAAAA,UAAS,MAAjC,GAAOK,EAAP,KAAaC,EAAb,KACOC,EAAP,GAAeC,EAAAA,EAAAA,MAAf,MAEMC,GAAYC,EAAAA,EAAAA,cAAY,SAACC,GACvBA,GACAL,EAAQK,GACRJ,MAAAA,GAAAA,EAAMK,eAAN,KACOD,KAGXJ,MAAAA,GAAAA,EAAMK,eAAe,CACjBC,WAAY,MAEhBX,GAAW,KACZ,KAEHY,EAAAA,EAAAA,qBAAoBhB,GAAK,iBAAO,CAC5BW,UAAAA,MAGJ,IAAMM,GAAcL,EAAAA,EAAAA,cAAY,WAC5BR,GAAW,GACXI,EAAQ,MACRC,MAAAA,GAAAA,EAAMS,gBACP,IAEGC,GAAWP,EAAAA,EAAAA,cAAY,SAACQ,GAC1BC,QAAQC,IAAIF,GACRA,MAAAA,GAAAA,EAAQL,aAAcK,MAAAA,OAAA,EAAAA,EAAQL,YAAa,EAC3CN,MAAAA,GAAAA,EAAMc,UAAU,CACZ,CACIC,KAAM,aACNC,OAAQ,CAAC,mCAKrBnB,GAAW,GACPC,EACAhB,EAAAA,EAAAA,IAAA,+BAAkCgB,MAAAA,OAAlC,EAAkCA,EAAMmB,IAAxC,OAAkDN,GAAlD,IAA0DO,WAAUpB,MAAAA,IAAAA,EAAMoB,aACzEC,MAAK,SAAAC,GACFR,QAAQC,IAAIO,GACZ,YAAqB,CACjBC,QAAS,yBAEb7B,GAAYA,IACZgB,OAPJ,OASO,SAAAc,GACHV,QAAQC,IAAIS,GACZ,UAAmB,CACfD,QAAS,yBAZjB,SAeS,kBAAMxB,GAAW,MAG9Bf,EAAAA,EAAAA,KAAW,uBAAX,KAAuC6B,IAClCQ,MAAK,SAAAC,GACFR,QAAQC,IAAIO,GACZ,YAAqB,CACjBC,QAAS,wBAEb7B,GAAYA,IACZgB,OAPR,OASW,SAAAc,GACHV,QAAQC,IAAIS,GACZ,UAAmB,CACfD,QAAS,wBAZrB,SAea,kBAAMxB,GAAW,SAC/B,CAACC,IAEEyB,GAAWpB,EAAAA,EAAAA,cAAY,SAACQ,GAC1BX,MAAAA,GAAAA,EAAMwB,WACP,IAEH,OACI,SAAC,UAAD,CACI9B,QAASA,EACT+B,SAAUjB,EACVkB,KAAMH,EACNI,cAAe,CACX/B,QAASA,GAEbgC,UAAQ,EACRC,OAAO/B,MAAAA,OAAA,EAAAA,EAAMgC,gBAAiB,wBAC9BC,OAAQjC,EAAO,WAAa,WAC5BkC,WAAW,MAVf,UAYI,eACIC,OAAO,WACPC,WAAY,CAAEC,KAAM,IACpBC,SAAU,CAAED,KAAM,IAClBzB,SAAUA,EACVV,KAAMA,EALV,WAOI,mBACIqC,MAAM,mBACNtB,KAAK,gBACLuB,MAAO,CAAC,CAAEC,UAAU,EAAMlB,QAAS,0BAHvC,UAKI,oBAGJ,mBACIgB,MAAM,eACNtB,KAAK,aACLuB,MAAO,CAAC,CAAEC,UAAU,EAAMlB,QAAS,sBAHvC,UAKI,cAAamB,SAAU1C,MAAAA,OAAF,EAAEA,EAAMoB,qBAOjD,SAAeuB,EAAAA,EAAAA,MAAKpD","sources":["webpack:///./resources/js/config/axios.js","webpack:///./resources/js/pages/admin/DM_MauTieuChi/ModalForm/index.js"],"sourcesContent":["\r\nimport * as Axios from \"axios\";\r\n\r\nlet token = document.head.querySelector('meta[name=\"csrf-token\"]');\r\n\r\nconst axios = Axios.default.create({\r\n    baseURL: '/',\r\n    responseType: 'json',\r\n    // timeout: 1000,\r\n    // headers: {\r\n    //     'Accept': 'application/json'\r\n    // }\r\n})\r\n\r\nexport {\r\n    axios\r\n}","import { Form, Input, InputNumber, notification } from \"antd\";\r\nimport { useForm } from \"antd/lib/form/Form\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport React, { forwardRef, memo, useCallback, useImperativeHandle, useState } from \"react\";\r\nimport { axios } from \"../../../../config\";\r\n\r\nconst ModalForm = forwardRef(({\r\n    callback\r\n}, ref) => {\r\n\r\n    const [visible, setVisible] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [item, setItem] = useState(null)\r\n    const [form] = useForm()\r\n\r\n    const showModal = useCallback((itemInput) => {\r\n        if (itemInput) {\r\n            setItem(itemInput)\r\n            form?.setFieldsValue({\r\n                ...itemInput\r\n            })\r\n        } else \r\n        form?.setFieldsValue({\r\n            TongSoDiem: 100\r\n        })\r\n        setVisible(true)\r\n    }, [])\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        showModal\r\n    }))\r\n\r\n    const hiddenModal = useCallback(() => {\r\n        setVisible(false)\r\n        setItem(null)\r\n        form?.resetFields()\r\n    }, [])\r\n\r\n    const onFinish = useCallback((values) => {\r\n        console.log(values)\r\n        if (values?.TongSoDiem && values?.TongSoDiem < 0) {\r\n            form?.setFields([\r\n                {\r\n                    name: 'TongSoDiem',\r\n                    errors: [\"Tổng số điểm phải lớn hơn 0\"]\r\n                }\r\n            ])\r\n            return\r\n        }\r\n        setLoading(true)\r\n        if (item) {\r\n            axios.put(`/admin/DM_MauTieuChi/${item?.id}`, {...values, PhatHanh: item?.PhatHanh ? true : false})\r\n            .then(res => {\r\n                console.log(res)\r\n                notification.success({\r\n                    message: 'Chỉnh sửa thành công'\r\n                })\r\n                callback && callback()\r\n                hiddenModal()\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                notification.error({\r\n                    message: 'Lỗi khi chỉnh sửa'\r\n                })\r\n            })\r\n            .finally(() => setLoading(false))\r\n        }\r\n        else\r\n        axios.post('/admin/DM_MauTieuChi', {...values})\r\n            .then(res => {\r\n                console.log(res)\r\n                notification.success({\r\n                    message: 'Thêm mới thành công'\r\n                })\r\n                callback && callback()\r\n                hiddenModal()\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                notification.error({\r\n                    message: 'Lỗi khi thêm mới'\r\n                })\r\n            })\r\n            .finally(() => setLoading(false))\r\n    }, [item])\r\n\r\n    const onSubmit = useCallback((values) => {\r\n        form?.submit()\r\n    }, [])\r\n\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            onCancel={hiddenModal}\r\n            onOk={onSubmit}\r\n            okButtonProps={{\r\n                loading: loading\r\n            }}\r\n            centered\r\n            title={item?.TenMauTieuChi || 'Thêm mới mẫu tiêu chí'}\r\n            okText={item ? 'Cập nhật' : 'Thêm mới'}\r\n            cancelText='Hủy'\r\n        >\r\n            <Form\r\n                layout='vertical'\r\n                wrapperCol={{ span: 24 }}\r\n                labelCol={{ span: 24 }}\r\n                onFinish={onFinish}\r\n                form={form}\r\n            >\r\n                <Form.Item\r\n                    label='Tên mẫu tiêu chí'\r\n                    name='TenMauTieuChi'\r\n                    rules={[{ required: true, message: 'Nhập tên mẫu tiêu chí' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label='Tổng số điểm'\r\n                    name='TongSoDiem'\r\n                    rules={[{ required: true, message: 'Nhập tổng số điểm' }]}\r\n                >\r\n                    <InputNumber disabled={item?.PhatHanh} />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n})\r\n\r\nexport default memo(ModalForm)"],"names":["axios","document","head","querySelector","Axios","baseURL","responseType","ModalForm","forwardRef","ref","callback","useState","visible","setVisible","loading","setLoading","item","setItem","form","useForm","showModal","useCallback","itemInput","setFieldsValue","TongSoDiem","useImperativeHandle","hiddenModal","resetFields","onFinish","values","console","log","setFields","name","errors","id","PhatHanh","then","res","message","err","onSubmit","submit","onCancel","onOk","okButtonProps","centered","title","TenMauTieuChi","okText","cancelText","layout","wrapperCol","span","labelCol","label","rules","required","disabled","memo"],"sourceRoot":""}